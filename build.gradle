group 'com.snowplowanalytics'
version '0.1.1'

apply plugin: 'java'
apply plugin: 'jacoco'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}
apply plugin: 'com.jfrog.bintray'

repositories {
    mavenCentral()
    maven {
        url "http://maven.snplow.com/releases"
    }
}

dependencies {
    compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
    compile 'com.amazonaws:aws-lambda-java-events:1.1.0'
    compile 'com.amazonaws:aws-java-sdk-s3:1.10.69'
    compile 'com.amazonaws:aws-java-sdk-lambda:1.10.69'
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.snowplowanalytics:snowplow-java-tracker:0.8.0'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.+"
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    pkg {
        repo = 'generic-test'
        name = 'snowplow-aws-lambda-source'
        desc = 'AWS Lambda Function for sending AWS event sources as Snowplow events'
        // userOrg = 'com.snowplowanalytics' fixme later
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/snowplow/snowplow-aws-lambda-source'
    }

    filesSpec {
        from './build/distributions/'
        into '.'
        rename { filename -> filename.replace(/-/, '_') }
    }
}

bintrayUpload.dependsOn { buildZip }